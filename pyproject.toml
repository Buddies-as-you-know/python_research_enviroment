[tool.poetry]
name = "python-demo"
version = "0.1.0"
description = ""
authors = ["YuminosukeSato"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
numpy = "^1.26.1"
scipy = "^1.11.3"
open3d = "^0.17.0"
plyfile = "^1.0.1"
scikit-learn = "^1.3.2"
hydra-core = "1.3"
pyyaml = "^6.0.1"


[tool.poetry.group.dev.dependencies]
flake8 = "^6.1.0"
pyproject-flake8 = "^6.1.0"
flake8-isort = "^6.1.0"
flake8-bugbear = "^23.9.16"
flake8-builtins = "^2.1.0"
flake8-eradicate = "^1.5.0"
flake8-unused-arguments = "^0.0.13"
flake8-pytest-style = "^1.7.2"
pep8-naming = "^0.13.3"
mypy = "^1.6.1"
black = "^23.10.1"
isort = "^5.12.0"
ruff = "^0.1.2"
types-pyyaml = "^6.0.12.12"

[tool.ruff]
target-version = "py38"
line-length = 100
select = [
  "E", # pycodestyle errors
  "W", # pycodestyle warnings
  "F", # pyflakes
  "B", # flake8-bugbear
  "I", # isort
]

ignore = [
  "E501", # line too long, handled by black
  "B008", # do not perform function calls in argument defaults
]

unfixable = [
  "F401", # module imported but unused
  "F841", # local variable is assigned to but never used
]

[tool.mypy]
# エラー時のメッセージを詳細表示
show_error_context = true
# エラー発生箇所の行数/列数を表示
show_column_numbers = true
# import 先のチェックを行わない (デフォルトだとサードパーティーライブラリまでチェックする)
ignore_missing_imports = true
# 関数定義の引数/戻り値に型アノテーション必須
disallow_untyped_defs = true
# デフォルト引数に None を取る場合型アノテーションに Optional 必須
no_implicit_optional = true
# 戻り値が Any 型ではない関数の戻り値の型アノテーションが Any のとき警告
warn_return_any = true
# mypy エラーに該当しない箇所に `# type: ignore` コメントが付与されていたら警告
# ※ `# type: ignore` が付与されている箇所は mypy のエラーを無視出来る
warn_unused_ignores = true
# 冗長なキャストに警告
warn_redundant_casts = true

[tool.black]
line-length = 79

[tool.isort]
profile = "black"
line_length = 79
# 各ライブラリ群の説明を追記する
import_heading_stdlib      = "Standard Library"
import_heading_thirdparty  = "Third Party Library"
import_heading_firstparty  = "First Party Library"
import_heading_localfolder = "Local Library"
# from third_party import lib1, lib2...のような記述時の改行方法の設定(https://pycqa.github.io/isort/docs/configuration/multi_line_output_modes.html)
multi_line_output = 3
# 最後の要素の末尾に","を付けるようにする設定
include_trailing_comma = true

[tool.flake8]
max-line-length = 79
# E203: ":"の前の空白を入れないルール
# W503: 演算子の前に改行しないようにするルール
extend-ignore = ["E203", "W503"]
exclude = [".venv", ".git", "__pycache__",]
max-complexity = 10

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

